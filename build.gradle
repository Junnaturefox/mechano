plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {

	maven { url "https://maven.architectury.dev/" }                  // architectury
	maven { url "https://ladysnake.jfrog.io/artifactory/mods" }      // cardinal components
	maven { url = "https://jitpack.io/" }                            // mixin extras
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // reach entity attributes
	maven { url = "https://maven.fabricmc.net/teamreborn/energy/" }   // teamreborn energy API
	maven { url "https://maven.shedaniel.me/" }                      // cloth config, REI
	maven { url "https://maven.terraformersmc.com/" }                // modmenu
	maven { url = "https://api.modrinth.com/maven" }                 // lazydfu
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' } //geckolib
	
	maven { url = "https://maven.tterrag.com/" }                     // flywheel
	maven { url = "https://mvn.devos.one/snapshots/" }               // create, porting lib, forge tags, registrate
	maven { url "https://cursemaven.com" }                           // createaddition

	maven { url = "https://jitpack.io/" }
	maven { url = "https://maven.cafeteria.dev/releases" }                                 // i forgor
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }     // forge config api
	
	
	
	
}

dependencies {
	//minecraft things
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// cool APIs
		implementation 'com.electronwill.night-config:core:3.6.5'
        implementation 'com.electronwill.night-config:toml:3.6.5'

		modImplementation "software.bernie.geckolib:geckolib-fabric-1.19:${project.geckolib_version}"

		modImplementation(include("io.github.fabricators_of_create.Porting-Lib:extensions:1.0"))
		modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}")
		modApi "dev.architectury:architectury-fabric:${project.architectury_version}"
		
		modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
		modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
		
		modLocalRuntime("maven.modrinth:lazydfu:${lazydfu_version}")
		include modApi("teamreborn:energy:${project.teamreborn_energy_api_version}") {
			exclude(group: "net.fabricmc.fabric-api")
		}

	// compat
	modImplementation "curse.maven:createaddition-439890:${project.createaddition_version}"
	modImplementation("com.tterrag.registrate_fabric:Registrate:${project.registrate_version}-MC${project.minecraft_version}")
	modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}+${minecraft_version}")

	// extras :)
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

	
	

	



}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
